name: 'Sonar Cloud composite action to analyze .NET projects'
description: 'Process .NET test results'
inputs:
  projects:  
    description: 'comma separated list of projects to analyze'
    required: true
  dotnet-version:
    description: 'the .NET version to use on .NET Setup'
    required: true
    default: '7.0.x'
  #GITHUB_TOKEN:
  #  description: 'the secrets.GITHUB token that needs to be passed in. Note that GitHub will keep this as a secret (***) as long is the input is a secret'
  #  required: false
  sonarcloud-organization:
    description: 'the sonarcloud organization name. For example, "samsmithnz-github"'
    required: true
  sonarcloud-project:
    description: 'the sonarcloud project name. For example, "samsmithnz_dotnetsample"'
    required: true
  SONAR_TOKEN:
    description: 'the sonar token secret. Note that GitHub will keep this as a secret (***) as long is the input is a secret'
    required: true
runs:
  using: 'composite'
  steps:
  - name: 'Pre-action checks'
    shell: pwsh
    run: |
      $projectArray = "${{ inputs.projects}}".Split(",")
      #check if the action is being run with a Windows runner
      echo "$($projectArray.Length) projects found"
      for ($i = 0; $i -lt $projectArray.Length; $i++)
      {
         echo "Project found: $($projectArray[$i])"
      }
      echo "Runner os: ${{ runner.os }}"
      if ("${{ runner.os }}" -ne 'Windows')
      {
        echo "This composite action currently only supports Windows runners. Linux is coming soon - probably"
        #exit 1
      }
      if ("${{ inputs.SONAR_TOKEN }} -eq $null")
      {
        echo "Please enter a sonar token input"
        exit 1
      }
  - name: Set up JDK 11
    uses: actions/setup-java@v1
    with:
      java-version: 1.11
  - uses: actions/checkout@v3
    with:
      fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  - name: Install .NET 7 SDK
    uses: actions/setup-dotnet@v3.0.3
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
  - name: Cache SonarCloud packages
    uses: actions/cache@v3
    with:
      path: ~\sonar\cache
      key: ${{ runner.os }}-sonar
      restore-keys: ${{ runner.os }}-sonar
  - name: Cache SonarCloud scanner
    id: cache-sonar-scanner
    uses: actions/cache@v3
    with:
      path: .\.sonar\scanner
      key: ${{ runner.os }}-sonar-scanner
      restore-keys: ${{ runner.os }}-sonar-scanner
  - name: Install SonarCloud scanner
    if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    shell: powershell
    run: |
      New-Item -Path .\.sonar\scanner -ItemType Directory
      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  - name: Build and analyze
    shell: powershell
    run: |
      .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ inputs.sonarcloud-project }}" /o:"{{ inputs.sonarcloud-organization" /d:sonar.login="${{ inputs.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      $projectArray = "${{ inputs.projects}}".Split(",")
      for ($i = 0; $i -lt $projectArray.Length; $i++)
      {
         dotnet build $($projectArray[$i])
      }
      .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ inputs.SONAR_TOKEN }}"
